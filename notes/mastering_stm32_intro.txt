1. Introduction to STM32 MCU portfolio
    - STM32F0 line - low cost 32 bit MCUs, price comparable to 8 bit MCUs but superior features.
    - bootloader uses AES to encrypt the firmware
    - ARM refers to both:
        - families of RISC "architectures" (describes a machine, example: ARMv7-M):
            - instruction set and cycles.
            - execution model.
            - memory organization and layout.
        - families of "complete cores". (based on architecture revisions, example: core Cortex-M4, implementing ARMv7-M)
            - based on architecture
            - integrated peripherals (Q: what is that?)
            - hardware capabilities.
        - Cortex-A - Application
        - Cortex-R - Real-time
        - Cortex-M - eMbedded
            - Registers: R0-R12 GPR, R13 SP (banked - based on mode priv/unpriv), R14 LR, R15 PC
            - Address space:
              - 4 GB, 512 MB code area (additionally subdivided for STM32)
              - 0x0 area - ptr to beginning of stack, vector table, etc. Can be aliased.
              - "System memory" - ROM reserved for bootloads.
              - "Options bytes" - configure different aspects of the MCU.
              - 0x2000 0000 - internal SRAM, 0x4000 0000 - peripherals
              - external ram / external devices - 2 GB address space. (core can execute code and load/store data from external sources)
              - able to perform unaligned memory access.
        - pipelined - paralellelize processing instructions to increase throughtput.
        - bit banding - map each bit of given area of memory to a whole word in a specially aliased memory. Used for optimization over bitmasking.
        - Thumb 2 - mix of 16 and 32 bit instruction sets. Variable length.
        - SIMD - single instruction, multiple data supported (NEON)
        - Interrupts and exceptions - suspend current task, save CPU state, call handler. Interrupts are types of exceptions in ARM architectures.
          Each exception has a number that identifies it. Prioirty is used by CPU to decide order of handling events, including suspending interrupt that
          is currently being handled.
        - NVIC - handles exceptions and interrupts.
        - SysTick - system timer, 24-bit down-counting timer (one of the triggers for RTOS, also used by the HAL for precise delays)
        - Power modes:
            - intrinsic - pipelining, high-code density
            - user-defined modes (controlled by SCR) - Run (clock frequency), Sleep (reduced functionality), Deep sleep (clock stopped, waiting for external event)
        - CMSIS (Cortex Microcontroller Software Interface Standard) - vendor-idependent HAL + debugger interfaces.
    - STM32 portfolio - Cortex-M based MCUs.
        F0 - low price, competes with 8 bit MCUs. (Cortex-M0, max 48MHz, SysTick timer, 4-32KB SRAM, 16-256KB Flash, internal clock)
        F1 - most widespread. (Cortex-M3, 24-72 MHz, 4-96KB SRAM,  15-266KB Flash, internal clock, multiple connectivity options)
        ...
        WB series - Application processor + network processor.
    - Nucleo parts:
        - ST-LINK integrated debugger - used for uploading firmware and step-by-step debugger.
            - Provides VCP (Virtual COM Port) for communication with PC.
            - Provides SWD (Serial wire debug) for programming other boards, withit detaching the ST-LINK interface.
        - Rest of the board:
            - target MCU
            - HSE (external high speed crytal)
            - reset / user programmable button / led
            - Arduino-compatible pin connectors
            - Morpho connectors - specific to the Nucleo
        - Boards are designed to be pin-to-pin compatible.
        - Nucleo F030R8 - STM32F030R8T6, 8KB RAM, 64 KB flash, 48 MHz

    NOTE: SEGGER J-Link advanced debugger is explained in Chapter 24.

2. Setting-Up the Tool-Chain
    - STMCubeMX - graphical tool used to generate setup files in C for STM32 MCUs.
    - CDT - C/C++ Development tools SDK (probably not needed)
    - STM32CubeProgrammer - uploads firmware on the MCU usint the ST-LINK interface of Nucleo, or dedicated ST-LINK programmer (probably not needed)


3. Hello, Nucleo!
    - change debugger to "SEGGER J-link" when running project.
    - did a simple LED2 blinking project using the STM32 HAL.

4. STM32CubeMX Tool

5. Introduction to Debugging
