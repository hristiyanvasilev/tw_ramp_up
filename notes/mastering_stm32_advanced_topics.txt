24. Advanced debugging techniques.
    - Register Description
        - R0 - R3 (saved during exception handling)
            - first four parameters to pass to a called function.
              NOTE: you should try to limit the number of parameters to 4
              whenever possible.
              If that is not possible, you should keep the most freqnetly used
              in first 4 parameters.
            - return value of function.
        - R12 - scratch register, used by linker to perform "dynamic" linking.
                (saved during exception handling)
        - R13 - SP (saved during exception handling)
            - Process stack pointer
            - Main stack pointer
        - R14 - LR (saved during exception handling)
        - R15 - PC
        - CPSR - Program status register. (saved during exception handling)
    - Fault related exceptions Cortex M3/4/7:
        - Memory Management Fault - violation rules related to MPU config.
        - Bus Fault - wrong access to SRAM or FLASH (like bad function ptr)
            - stacking/unstacking error - occurs during stack pushing/popping.
              Example: stack overflow, causes bus flow since it accesses invalid
              SRAM location.
            - precise bus fault - happened during access instruction
            - imprecise bus fault - happened sometime after the memory access 
              instruction has been done.
        - Usage Fault
            - execution of undefined instructions
            - invalid EXC_RETURN code.
            - unaligned memory access store.
        - Hard Fault (Cortex M0/M0+ cores)
            - used when other fault exception has been disabled.
              When fault arises, we can derive the cause by examining system
              registers! You can also analyse the stack trace.
              NOTE: we need special assembly code in order to access data in the
              saved registers.
            - Access to invalid memory location.
            - Not well-implemented vector table.
            - Stack overflow.
            - software breakpoint
    - Breakpoints / watchpoints:
        - watchpoints: 2 Cortex M0/0+, 4 Cortex M3/4/7
        - breakpoints: 4 Cortex M0/0+, 6 Cortex M3/4/7
        - J-link debuggers allow to set unlimited number of breakpoints.
    - assert_failed - runtime failure detection, need to enable USE_FULL_ASSERT
                      at project level, Implementation of function is left to
                      user, you can just put a simple sw breakpoint.
    - JTAG vs SWD
        - JTAG - defines signaling characteristics and protocol.
               Allows`to attach external debug probes to MCU.
               5 wires + VDD/GND
        - SWD (serial wire debug) - ARM proprietary 2-pin electric interface.
                                    Uses the same JTAG protocol.
                                    Debuggers become AMBA master and can access
                                    system memory / peripherals / debug registers.
                                    Up to 4Mb/s at 50 Mhz.
                                    TMS and TCK are SWDIO and SWCLK
                                    SWO - used to exchange data between MCU and
                                    host application without overhead.



